#!/bin/sh
# start configuard server
# blame: @dmilith

. src/common
if [ -f "${HOME}/.profile" ]; then
    echo "Loading .profile"
    . "${HOME}/.profile"
fi

load_configuard

which cargo >/dev/null 2>&1
if [ "0" != "${?}" ]; then
    error "Rust compiler is required to build configuard!"
fi

ifconfig | grep bridge0 >/dev/null 2>&1
if [ "0" != "${?}" ]; then
    echo "Creating default bridge0"
    ifconfig bridge0 create
fi

kldstat | grep tuntap >/dev/null 2>&1
if [ "0" != "${?}" ]; then
    echo "Loading if_tuntap kernel module (required)"
    kldload if_tuntap
fi

if [ ! -f "/Services/Wireguard-tools/private.key" ] \
|| [ ! -f "/Services/Wireguard-tools/pub.key" ]; then
    echo "No private/pub keys found, generating new onesâ€¦"
    ${wireguard_bin} genkey > /Services/Wireguard-tools/private.key
    chmod 600 /Services/Wireguard-tools/private.key
    ${wireguard_bin} pubkey < /Services/Wireguard-tools/private.key > /Services/Wireguard-tools/pub.key
fi

if [ ! -f "/Services/Wireguard-tools/wg0.conf" ]; then
    echo "Creating wg0.conf stub"
    cat > /Services/Wireguard-tools/wg0.conf <<EOF
[Interface]
ListenPort = ${server_port}
PrivateKey = $(cat /Services/Wireguard-tools/private.key)
EOF
fi

_forwarding="$(sysctl -n net.inet.ip.forwarding)"
if [ "1" != "${_forwarding}" ]; then
    echo "Enabling ip forwarding"
    sysctl net.inet.ip.forwarding=1
fi

cargo build --release \
    && ROCKET_ADDRESS=${server_public_ip} ROCKET_PORT=${server_port} "target/release/configuard"
